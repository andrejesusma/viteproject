import { gql, useQuery } from "@apollo/client"
import { useEffect } from "react"
useEffect(() =>{Forma de query 1
    client.query({
      query: GET_LESSONS_QUERY,
    }).then(response =>{
      console.log(response.data);
    })
  })
  const {data} = useQuery<{ lessons: Lesson[]}>(GET_LESSONS_QUERY)
    return(
      <ul>
        {data?.lessons.map(lesson =>{
          return <li key={lesson.id}>{lesson.title}</li>
        })}
      </ul>
    )
  
  const {data} = useQuery(GET_LESSONS_QUERY)
  console.log(data)
  return (
    <h1>Hello world</h1>
  )
  const GET_LESSONS_QUERY = gql`
  query {
    lessons {
      id
      title
    }
  }
`
interface Lesson{
  id: string;
  title: string;
}

<div className={condicional tailments 
                `rounded border border-gray-500 p-4 mt-2 group-hover:border-green-500 
                ${isActiveLesson ? 'bg-green-500' : ''}
            `}>

components = "Pedaços de interface" while have very reapts
properties = formas de alterar ações ou formatos de components